.card {
  border-radius: var(--ice-rounded-box, 1rem);
}
.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}
.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}
.card:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.card.bordered {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--ice-base-200) / var(--tw-border-opacity));
}
.card-bordered {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--ice-base-200) / var(--tw-border-opacity));
}
.card.compact .card-body {
  padding: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.card-body {
  padding: var(--ice-padding-card, 2rem);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.card-title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
}
.card.image-full:before {
  z-index: 10;
  border-radius: var(--ice-rounded-box, 1rem);
  --tw-bg-opacity: 1;
  background-color: rgba(var(--ice-neutral) / var(--tw-bg-opacity));
  opacity: 0.75;
}
.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}
.card.image-full>.card-body {
  z-index: 20;
  --tw-text-opacity: 1;
  color: rgba(var(--ice-neutral-content) / var(--tw-text-opacity));
}